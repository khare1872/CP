Q3-Div2-694
Petya organized a strange birthday party. He invited n friends and assigned an integer ki to the i-th of them. Now Petya would like to give a present to each of them. In the nearby shop there are m unique presents available, the j-th present costs cj dollars (1≤c1≤c2≤…≤cm). It's not allowed to buy a single present more than once.

For the i-th friend Petya can either buy them a present j≤ki, which costs cj dollars, or just give them cki dollars directly.

Help Petya determine the minimum total cost of hosting his party.

Input
The first input line contains a single integer t (1≤t≤103) — the number of test cases.

The first line of each test case contains two integers n and m (1≤n,m≤3⋅105) — the number of friends, and the number of unique presents available.

The following line contains n integers k1,k2,…,kn (1≤ki≤m), assigned by Petya to his friends.

The next line contains m integers c1,c2,…,cm (1≤c1≤c2≤…≤cm≤109) — the prices of the presents.

It is guaranteed that sum of values n over all test cases does not exceed 3⋅105, and the sum of values m over all test cases does not exceed 3⋅105.

Output
For each test case output a single integer — the minimum cost of the party.

Solution:
#include <iostream>
#include <bits/stdc++.h>
using namespace std;
int main() {
    int t;
    cin>>t;
    while(t--){
        long long int n;
        long long x;
        cin>>n>>x;
        vector<long long int> v(n);
        vector<long long int> c(x);
        vector<long long int> cc(x);
        for(int i=0;i<n;i++){
            cin>>v[i];
        }
        for(long long int i=0;i<x;i++){
            cin>>c[i];
        }
        sort(v.begin(),v.end(),greater<long long int>());
        long long int i=0;
        long long int k=0;
        long long int cost=0;
        while(i<n){
            if(c[v[i]-1]>c[k]) {
                cost+=c[k];
                k++;
            }
            else{
                cost+=c[v[i]-1];
                
            }
            i++;
        }
        cout<<cost<<endl;
    }
    return 0;
